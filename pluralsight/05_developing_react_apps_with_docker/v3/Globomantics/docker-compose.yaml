version: '3.8'
services:
  redis:
    image: redis
    # container_name: redis
    restart: on-failure
    ports:
      - '6379:6379'
    volumes:
      - ./Db:/data
    networks:
      - globomantics
  postgres:
    image: postgres
    # container_name: postgres
    restart: on-failure
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P@ssw0rd
      - POSTGRES_DB=globomantics
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./Db/sql:/docker-entrypoint-initdb.d
    networks:
      - globomantics
  api:
    image: sswietoniowski/globomantics-api
    # container_name: globomantics-api
    restart: on-failure
    build:
      context: ./Api
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    depends_on:
      - redis
    volumes:
      - ./Api/src:/app/src
    networks:
      - globomantics
  client:
    image: sswietoniowski/globomantics-client
    # container_name: globomantics-client
    restart: on-failure
    build:
      context: ./Client
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    stdin_open: true
    depends_on:
      - api
    volumes:
      - ./Client/src:/app/src
    networks:
      - globomantics
networks:
  globomantics:
    driver: bridge

volumes:
  postgres:
